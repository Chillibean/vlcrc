= {{nice name}}: {{summary}}
{{description}}

{{features}}

== Usage
{{nice name}} is a library for controlling VLC and includes a CLI wrapper for VLC's built-in TCP interface since that can be a little confusing. To use this Ruby binding for the TCP interface, look at this to initialise the connection.

  require '{{name}}'
  
  # Create a new VLC object, which attempts to connect
  vlc = VLCRC::VLC.new localhost, 1234
  
  # Launch an instance of VLC bound to the above socket
  vlc.launch
  
  # Connect to it (have to wait for it to launch though)
  until vlc.connected?
    sleep 0.1
    vlc.connect
  end

VLC can be configured to run with the RC interface open by default on a certain socket so that you can connect to instances of VLC that are already open. Note that different instances need to run on different sockets. Now that it's up and running,

  # Start playing a file
  vlc.media = "/path/to/a/video.avi"
  
  # Seek to the middle of the file
  middle = ( vlc.length / 2 ).round
  vlc.position = middle
  
  # Add a bunch of files and move around
  vlc.playlist = [
    "/path/to/first/file.avi",
    "/path/to/another/one.mkv",
    "/path/to/something/else.mp4"
  ]
  vlc.skip
  vlc.media   #=> "/path/to/another/one.mkv"
  
  # Stop the file
  vlc.playing = false
  
  # Close VLC
  vlc.exit

To run the specs, you'll need to add at least one video file to spec/data (anything that VLC can open will do). Just pop the file(s) in, and then the specs should run without issue.

== CLI
This is pretty basic, there are a few main methods demonstrated below. If you want more control, then go for the full shebang: use VLC's Telnet interface.

  {{name}} --help

== Requires
{{nice name}} needs all this stuff

{{dependencies}}

== Acknowledgement
Thanks to these sources, used as references during development

{{acknowledgements}}

== License

{{license}}
